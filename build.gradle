plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'jacoco'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.liquibase:liquibase-core:4.18.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    api 'org.modelmapper:modelmapper:2.4.4'
    runtimeOnly 'mysql:mysql-connector-java:8.0.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'

}

group = 'ua.nikolenko'
version = '1'
description = 'ua.nikolenko.WeatherSensorRESTApp'
java.sourceCompatibility = JavaVersion.VERSION_1_8

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

test{
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

jacocoTestReport{
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

jacocoTestCoverageVerification{
    violationRules{
        rule{
            enabled = true
            limit{
                minimum = 0.45
            }
        }
    }
}
